<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_240055_colledge.Housing</api_name>
        <client_callable>false</client_callable>
        <description>Utility functions for dealing with housing</description>
        <name>Housing</name>
        <script><![CDATA[var Housing = Class.create();
Housing.prototype = {
    initialize: function() {
		this._grStudent = Student.getCurrentStudent();
		if(!this._grStudent) {
			throw new Error("Not a student");
		}
		
		// TODO :  We will cache these values when possible.
		this._grStudentRoom = undefined;
		this._grStudentFloor = undefined;
		this._grStudentBuilding = undefined;
		this._grStudentCampus = undefined;
    },
	
	getStudentRoom: function() {
		var room = this._grStudent.room_assignment.sys_id.toString();
		Expect.datatype.isString(room, 'get initial room');
		var student_room = (new GlideRecord('x_240055_colledge_room'));
		var success = student_room.get(room);
		if(success) {
			Expect.datatype.isObject(student_room, 'check student room');
			Logging.info("room: " + student_room.sys_id.toString());
			return student_room;
		}
		throw new Error('room not found');
	},
	
	getStudentFloor: function() {
		var floor = this.getStudentRoom().compose_space.floor;
		Expect.datatype.isObject(floor, 'initial get floor');
		var student_floor = (new GlideRecord('x_240055_colledge_floor'));
		var success = student_floor.get('compose_level', floor.sys_id.toString());
		if(success) {
			Expect.datatype.isObject(student_floor, 'check student floor');
			Logging.info("floor: " + student_floor.sys_id);
			return student_floor;
		}
		throw new Exception("floor not found");
	},
	
	getStudentBuilding: function() {
		var building = this.getStudentRoom().compose_space.floor.building;
		Expect.datatype.isObject(building, 'initial get building');
		var student_building = (new GlideRecord('x_240055_colledge_building'));
		var success = student_building.get('compose_building', building.sys_id.toString());
		if(success) {
			Expect.datatype.isObject(student_building, 'check student building');
			Logging.info("building: " + student_building.sys_id);
			return student_building;
		}
		throw new Exception("Building not found");
	},
	
	getStudentCampus: function() {
		var campus = this.getStudentRoom().compose_space.floor.building.campus;
		Expect.datatype.isObject(campus);
		var student_campus = (new GlideRecord('x_240055_colledge_campus'));
		var success = student_campus.get('compose_campus', campus.sys_id);
		if(success) {
			Expect.datatype.isObject(student_campus, 'check student campus');
			Logging.info("campus: " + student_campus.sys_id);
			return student_campus;
		}
		throw new Exception("campus not found");
		
	},

    type: 'Housing'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>Howard.Chen@cognizant.com</sys_created_by>
        <sys_created_on>2018-10-15 22:13:31</sys_created_on>
        <sys_id>8f2a7ee3db052300d06853184b961919</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>Housing</sys_name>
        <sys_package display_value="colledge" source="x_240055_colledge">f48ceddedb452300d06853184b9619ba</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="colledge">f48ceddedb452300d06853184b9619ba</sys_scope>
        <sys_update_name>sys_script_include_8f2a7ee3db052300d06853184b961919</sys_update_name>
        <sys_updated_by>Howard.Chen@cognizant.com</sys_updated_by>
        <sys_updated_on>2018-10-18 20:23:56</sys_updated_on>
    </sys_script_include>
</record_update>
